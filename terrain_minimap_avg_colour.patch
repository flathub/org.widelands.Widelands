diff --git a/src/logic/map_objects/world/terrain_description.cc b/src/logic/map_objects/world/terrain_description.cc
index e88fa0fbcd..f0bd442168 100644
--- a/src/logic/map_objects/world/terrain_description.cc
+++ b/src/logic/map_objects/world/terrain_description.cc
@@ -184,11 +184,30 @@ void TerrainDescription::replace_textures(const LuaTable& table) {
 		// Set the minimap color on the first loaded image.
 		if (j == 0) {
 			SDL_Surface* sdl_surface = load_image_as_sdl_surface(texture_paths()[j]);
-			uint8_t top_left_pixel = static_cast<uint8_t*>(sdl_surface->pixels)[0];
-			const SDL_Color top_left_pixel_color =
-			   sdl_surface->format->palette->colors[top_left_pixel];
-			set_minimap_color(
-			   RGBColor(top_left_pixel_color.r, top_left_pixel_color.g, top_left_pixel_color.b));
+			int avg_r = 0, avg_g = 0, avg_b = 0;
+			const int bpp = sdl_surface->format->BytesPerPixel;
+			assert(sdl_surface->pitch == sdl_surface->w * bpp);
+			assert(bpp == 3 || bpp == 4 || (bpp == 1 && sdl_surface->format->palette != nullptr));
+			const int32_t nr_pixels = sdl_surface->h * sdl_surface->w;
+
+			const uint8_t* ptr = reinterpret_cast<const uint8_t*>(sdl_surface->pixels);
+			if (bpp == 1) {
+				for (int32_t i = nr_pixels; i > 0; --i) {
+					const SDL_Color c = sdl_surface->format->palette->colors[*(ptr++)];
+					avg_r += c.r;
+					avg_g += c.g;
+					avg_b += c.b;
+				}
+			} else {
+				for (int32_t i = nr_pixels; i > 0; --i) {
+					avg_r += *(ptr++);
+					avg_g += *(ptr++);
+					avg_b += *(ptr++);
+					if (bpp > 3) ++ptr;
+				}
+			}
+
+			set_minimap_color(RGBColor(avg_r / nr_pixels, avg_g / nr_pixels, avg_b / nr_pixels));
 			SDL_FreeSurface(sdl_surface);
 		}
 		add_texture(g_image_cache->get(texture_paths()[j]));
